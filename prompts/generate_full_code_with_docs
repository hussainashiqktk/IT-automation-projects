Here’s a refined prompt designed to take a single IT support automation idea and generate a complete project, including full code, project structure, and documentation. This prompt is structured to ensure the AI delivers a detailed, actionable output suitable for a real-world implementation.

---

### Prompt:
"I want you to act as an expert IT automation developer and take a single IT support automation idea I provide and develop it into a complete, ready-to-use project. The idea I’m giving you is: '[Insert your idea here, e.g., Automated disk space monitoring with email alerts for low storage]'. For this idea, provide the following:

1. **Project Overview**: A 3-5 sentence description of what the automation does, its real-life IT support use case, and the problem it solves.
2. **Tool/Technology Stack**: List the primary tools, programming languages, and platforms used (e.g., Python, SMTP libraries, Windows/Linux), with a brief justification for each choice.
3. **Project Structure**: Outline the full directory structure of the project (e.g., folders, files like `main.py`, `config.ini`, `README.md`), explaining the purpose of each component.
4. **Full Code**: Provide complete, functional code for the entire project, split into logical files as needed (e.g., main script, helper functions, configuration). Include detailed comments in the code explaining key sections and logic.
5. **Setup Instructions**: A step-by-step guide (5-7 sentences) on how to set up the project, including prerequisites (e.g., installing dependencies, configuring environment variables), and how to run it.
6. **Usage Documentation**: A concise user guide (4-6 sentences) explaining how to use the tool, including example commands/inputs, expected outputs, and how to customize it (e.g., changing thresholds or email recipients).
7. **Troubleshooting Guide**: A short section (3-5 sentences) listing common issues (e.g., permission errors, network failures) and their solutions.
8. **Sample Output**: Provide an example of what the tool’s output looks like (e.g., log file, email content, console message).
9. **Impact Statement**: One sentence summarizing how this automation improves IT efficiency, reduces manual work, or prevents issues.

The output should be practical, well-documented, and ready to deploy in a professional IT environment (e.g., Windows, Linux, or cloud). Ensure the code is modular, error-handled, and includes configuration options for flexibility. Package the response as if it’s a GitHub repository handover, complete and polished for immediate use or inclusion on a CV."

---

### How to Use It:
Replace `[Insert your idea here]` with your specific idea, like "Script to detect and remove orphaned user accounts in Active Directory" or "Automated backup verification tool." The prompt ensures the AI delivers a comprehensive project—code, structure, and docs—rather than just a list of ideas.

### Example:
If you give me an idea like "Automated disk space monitoring with email alerts," I could use this prompt to generate a full Python-based project with a `main.py` script, a `config.ini` for settings, email integration, and detailed README-style documentation. Want me to test it with one of your ideas? Just throw me an idea, and I’ll build it out!